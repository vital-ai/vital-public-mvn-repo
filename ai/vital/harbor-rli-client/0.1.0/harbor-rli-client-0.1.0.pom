<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

	<groupId>ai.vital</groupId>
	<artifactId>harbor-rli-client</artifactId>
	<version>0.1.0</version>
	
	
  <repositories>

    <repository>
      <id>vital-public-mvn-repo-releases</id>
      <name>Vital AI Public Maven Repo Releases</name>
      <url>https://github.com/vital-ai/vital-public-mvn-repo/raw/releases/</url>
    </repository>

    <repository>
      <id>vital-public-mvn-repo-snapshots</id>
      <name>Vital AI Public Maven Repo Snapshots</name>
      <url>https://github.com/vital-ai/vital-public-mvn-repo/raw/snapshots/</url>
    </repository>

  </repositories>

  <properties>
    <!-- the main class -->
    <exec.mainClass>ai.vital.vertx3.VitalVertx3Main</exec.mainClass>
    <vital.version>0.2.304</vital.version>
    <vertx.version>3.3.2</vertx.version>
    
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    
    <swagger-codegen-version>2.3.1</swagger-codegen-version>
    <gson-fire-version>1.8.0</gson-fire-version>
    <swagger-core-version>1.5.15</swagger-core-version>
    <okhttp-version>2.7.5</okhttp-version>
    <gson-version>2.8.1</gson-version>
    <maven-plugin-version>1.0.0</maven-plugin-version>
    <junit-version>4.12</junit-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <generated-sources-path>${project.build.directory}/generated-sources</generated-sources-path>
    <generated-sources-java-path>src/main/java</generated-sources-java-path>
    <generated-test-sources-java-path>src/test/java</generated-test-sources-java-path>
    
    
  </properties>

  
  <dependencies>

<!-- https://mvnrepository.com/artifact/org.threeten/threetenbp -->
<!-- use native java8 date
<dependency>
    <groupId>org.threeten</groupId>
    <artifactId>threetenbp</artifactId>
    <version>1.3.7</version>
</dependency>
-->

<!-- https://mvnrepository.com/artifact/org.codehaus.groovy.modules.http-builder/http-builder -->
<!-- 
<dependency>
    <groupId>org.codehaus.groovy.modules.http-builder</groupId>
    <artifactId>http-builder</artifactId>
    <version>0.7.1</version>
</dependency>
 -->

<!-- 
dependencies of the client code generated by swagger-codegen 
(copied from generated pom.xml) 
-->
         
        <dependency>
          <groupId>io.swagger</groupId>
          <artifactId>swagger-annotations</artifactId>
          <version>${swagger-core-version}</version>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp/okhttp -->
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp-version}</version>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp/logging-interceptor -->
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>${okhttp-version}</version>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson-version}</version>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/io.gsonfire/gson-fire -->
        <dependency>
            <groupId>io.gsonfire</groupId>
            <artifactId>gson-fire</artifactId>
            <version>${gson-fire-version}</version>
        </dependency>
        
	<dependency>
    	<groupId>junit</groupId>
    	<artifactId>junit</artifactId>
    	<version>4.12</version>
    	<scope>test</scope>
	</dependency>
    
  </dependencies>

  <build>

    <pluginManagement>
      <plugins>
        <!-- We specify the Maven compiler plugin as we need to set it to Java 1.8 -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        
        <!-- the following is only necessary if you are using eclipse and m2e -->
        <plugin>
            <groupId>org.eclipse.m2e</groupId>
            <artifactId>lifecycle-mapping</artifactId>
            <version>1.0.0</version>
            <configuration>
                <lifecycleMappingMetadata>
                    <pluginExecutions>
                        <pluginExecution>
                            <pluginExecutionFilter>
                                <groupId>io.swagger</groupId>
                                <artifactId>swagger-codegen-maven-plugin</artifactId>
                                <versionRange>[${swagger-codegen-version},)</versionRange>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </pluginExecutionFilter>
                            <action>
                                <execute />
                            </action>
                        </pluginExecution>
                    </pluginExecutions>
                </lifecycleMappingMetadata>
            </configuration>
        </plugin>
        
      </plugins>
    </pluginManagement>

    
    <plugins>
    
    	<plugin>
        	<groupId>io.swagger</groupId>
            <artifactId>swagger-codegen-maven-plugin</artifactId>
            <version>2.3.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- specify the swagger spec file -->
                            <inputSpec>${project.basedir}/src/main/resources/eCommerce Services v1.swagger.json</inputSpec>

                            <!-- target to generate java client code -->
                            <language>java</language>
                            <!-- 
							<ignoreFileOverride>${project.basedir}/.swagger-codegen-ignore</ignoreFileOverride>
                             -->
                             <modelPackage>ai.vital.rli.client.model</modelPackage>
                             <apiPackage>ai.vital.rli.client.api</apiPackage>
                             <invokerPackage>ai.vital.rli.client</invokerPackage>
                            <!-- pass any necessary config options -->
                            <configOptions>
                            <!-- java8 - Java 8 native JSR310 (preferred for jdk 1.8+) 
                            - note: this also sets "java8" to true -->
                                <dateLibrary>java8</dateLibrary>
                                <java8>true</java8>
                                <!-- source folder for generated code -->
                                <sourceFolder>${generated-sources-java-path}</sourceFolder>
                            </configOptions>
                            <output>${generated-sources-path}</output>

                            <!-- override the default library... default=okhttp-gson -->
                            <library>okhttp-gson</library>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- 
            Move the stuff we're actually interested in 
            into the right place 
            Manually 
            -->
<!-- <plugin>
	<groupId>com.coderplus.maven.plugins</groupId>
	<artifactId>copy-rename-maven-plugin</artifactId>
	<version>1.0.1</version>
	<executions>
		<execution>
			<id>copy-swagger-generated-sources</id>
			<phase>generate-sources</phase>
			<goals>
				<goal>rename</goal>
			</goals>
			<configuration>
			<fileSets>
                <fileSet>
                  <sourceFile>target/generated-sources</sourceFile>
                  <destinationFile>${project.basedir}/src/main/java/</destinationFile>
                </fileSet>
                <fileSet>
                  <sourceFile>${project.build.directory}/generated-sources/src/test/java/</sourceFile>
                  <destinationFile>${project.basedir}/src/test/java/swagger/</destinationFile>
                </fileSet>
                <fileSet>
                	<sourceFile>${project.build.directory}/generated-sources/docs/</sourceFile>
                	<destinationFile>${project.basedir}/docs/</destinationFile>
                </fileSet>            
              </fileSets>          
		</configuration>
		</execution>
	</executions>
</plugin> -->

<!-- Delelate all the junk generated by swagger which we don't want or need. -->
<plugin>
	<artifactId>maven-clean-plugin</artifactId>
	<version>3.1.0</version>
	<executions>
		<execution>
			<id>clean-superfluous-swagger-generated-files</id>
			<phase>generate-sources</phase>
			<goals>
				<goal>clean</goal>
			</goals>
			<configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/generated-sources</directory>
                                    <excludes>
                                        <exclude>src/main/java/**</exclude>
                                        <exclude>src/test/java/**</exclude>
                                        <exclude>docs/**</exclude>
                                    </excludes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
		</execution>
	</executions>
</plugin>        
            
            <!--
    You only need the part below if you want to build your application into a fat executable jar.
    This is a jar that contains all the dependencies required to run it, so you can just run it with
    java -jar
    -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>${exec.mainClass}</Main-Class>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
                </transformer>
				<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
              <artifactSet>
              </artifactSet>
              <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <!-- run the application using the fat jar -->
            <id>run-app</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-jar</argument>
                <argument>target/${project.artifactId}-${project.version}-fat.jar</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>build-helper-maven-plugin</artifactId>
    <version>1.5</version>
    <executions>
      <execution>
        <id>add-source</id>
        <phase>generate-sources</phase>
        <goals>
          <goal>add-source</goal>
        </goals>
        <configuration>
          <sources>
            <source>src/main/groovy</source>
          </sources>
        </configuration>
      </execution>
      <execution>
        <id>add-test-source</id>
        <phase>generate-test-sources</phase>
        <goals>
          <goal>add-test-source</goal>
        </goals>
        <configuration>
          <sources>
            <source>src/test/groovy</source>
          </sources>
        </configuration>
      </execution>
      
      <execution>
                <id>add-generated-source</id>
                <phase>generate-sources</phase>
                <goals>
                    <goal>add-source</goal>
                </goals>
                <configuration>
                    <sources>
                        <source>${generated-sources-path}/${generated-sources-java-path}</source>
                    </sources>
                </configuration>
            </execution>
            
            <execution>
                <id>add-generated-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                    <goal>add-test-source</goal>
                </goals>
                <configuration>
                    <sources>
                        <source>${generated-sources-path}/${generated-test-sources-java-path}</source>
                    </sources>
                </configuration>
            </execution>
            
    </executions>
  </plugin>


      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <!-- 2.8.0-01 and later require maven-compiler-plugin 3.1 or higher -->
        <version>3.1</version>
        <configuration>
          <compilerId>groovy-eclipse-compiler</compilerId>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-eclipse-compiler</artifactId>
            <version>2.9.1-01</version>
          </dependency>
          <!-- for 2.8.0-01 and later you must have an explicit dependency on groovy-eclipse-batch -->
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-eclipse-batch</artifactId>
            <version>2.3.7-01</version>
          </dependency>
        </dependencies>
      </plugin>
      
    </plugins>
  </build>
</project>
